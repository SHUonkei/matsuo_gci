import numpy as np



a_list = [[1, 2, 3, 4],
          [5, 6, 7, 8],
          [9, 1, 2, 3]]
a = np.array(a_list)


b_list = [[[1,2,3,4],[5,6,7,8],[1,1,1,1]],[[1,2,3,4],[1,1,1,1],[5,6,7,8]]]

print(len(b_list))
print(len(b_list[1]))


print(a)
print(a[0,1])

print(a[[0,1]]) #縦構造も保存
print(a[[0]])#縦構造も保存

print("---------")
print(a[0,2])
print(type(a[0,2]))
print(a[[0],2]) #= a[0,2]の
print(type(a[[0],2]))
print("0---------")
print(a[[0,2]])
print(type(a[[0,2]]))
print(a[0,2])

print("1------")
#複数せいぶん、一気に取得するとき、これよりレベルの低い書き方がない
#つまり、縦方向に保存するには、もう一個かっこが必要、ということか？
print(a[[0,1],[0]])
print(a[[[0],[1]],[0]])
print(a[[[0],[1]],[0,1]])


#多分第二引数に成分２つのリストはいるとこうなっちゃうな
#かっこ増やしてもそれが縦方向保存するだけ
#a[[[0],[1]],[0,1]]]
print(a[[0,1],[0,1]])
print(a[[[0],[1]],[[0],[1]]])


#まず、第一引数と第二引数に、リストが入ると、型はnp.arrayになる。
#しかし、これはまだ縦方向を保存しているわけではない。
#つまり、取得した成分は横並びの一次元np.arrayとなる

#しかし、引数の数字を[]で囲むと、次元を保存する形のnp.arrayとなる。

#a[[0,1],[0,1]]
print("step1")
print(a[[0,1],[0,1]])
#は横方向に、対応するインデックスの成分をならべたnp.arrayになり
#a[[[0],[1]],[[0],[1]]]
#も先ほどのものを縦保存
print("step2")
print(a[[[0],[1]],[[0],[1]]])
#a[[[0],[1]],[0,1]]
#は成分じゃなくて、行と列指定の部分行列になる。
print("step3")
print(a[[[0],[1]],[0,1]])



print(a[[[0], [2]], [[1, 3]]]) 
print(a[[[0], [2]], [1, 3]]) 